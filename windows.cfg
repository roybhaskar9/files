#Compatible NSClient++ version: https://github.com/mickem/nscp/releases/download/0.4.1.73/NSCP-0.4.1.073-x64.msi
#Make sure /etc/nagios-plugins/config/nt.cfg has this definition of check_nt command
#define command {
#        command_name    check_nt
#        command_line    /usr/lib/nagios/plugins/check_nt -H '$HOSTADDRESS$' -p 12489 -v '$ARG1$' '$ARG2$'
#}
#And add these lines in "C:\Program Files\NSClient++\nscp.ini" :
#allowed hosts =
#password =
#port = 12489
#Then restart both NSClient++ Service on Windows in services.msc and Nagios3 service on Ubuntu through these commands:
#nagios3 -v /etc/nagios3/nagios.cfg
#service nagios3 reload
#service nagios3 restart
#To test the client port from server issue "telnet CLIENT_IP 12489"



define host{
	use		        generic-host
	host_name 		remote-windows-host    
	alias           	Remote Windows Host
	address       		192.168.2.3
}

define service{
	use                     generic-service
	host_name               remote-windows-host
	service_description     NSClient++ Version
	check_command           check_nt!CLIENTVERSION
}

define service{
	use                     generic-service
	host_name               remote-windows-host
	service_description     Uptime
	check_command           check_nt!UPTIME
}

define service{
	use                     generic-service
	host_name               remote-windows-host
	service_description     CPU Load
	check_command           check_nt!CPULOAD!'-l 5,80,90'
}
define service{
	use                     generic-service
	host_name               remote-windows-host
	service_description     Memory Usage
	check_command           check_nt!MEMUSE!'-w 80 -c 90'
}

define service{
	use                     generic-service
	host_name               remote-windows-host
	service_description     C:\ Drive Space
	check_command           check_nt!USEDDISKSPACE!'-l c -w 80 -c 90'
}

#define service{
#	use                     generic-service
#	host_name               remote-windows-host
#	service_description     D:\ Drive Space
#	check_command           check_nt!USEDDISKSPACE!'-l d -w 90 -c 95'
#}


define service{
	use			generic-service
	host_name		remote-windows-host
	service_description	Printer Service
	check_command		check_nt!SERVICESTATE!'-d SHOWALL -l Spooler'
}

define service{
	use                     generic-service
	host_name               remote-windows-host
	service_description     Client Server Runtime Process
	check_command           check_nt!PROCSTATE!'-d SHOWALL -l csrss.exe'
}
